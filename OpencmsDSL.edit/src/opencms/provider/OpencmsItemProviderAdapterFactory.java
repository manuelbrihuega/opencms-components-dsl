/**
 */
package opencms.provider;

import java.util.ArrayList;
import java.util.Collection;

import opencms.util.OpencmsAdapterFactory;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class OpencmsItemProviderAdapterFactory extends OpencmsAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable
{
  /**
   * This keeps track of the root adapter factory that delegates to this adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ComposedAdapterFactory parentAdapterFactory;

  /**
   * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IChangeNotifier changeNotifier = new ChangeNotifier();

  /**
   * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected Collection<Object> supportedTypes = new ArrayList<Object>();

  /**
   * This constructs an instance.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OpencmsItemProviderAdapterFactory()
  {
    supportedTypes.add(IEditingDomainItemProvider.class);
    supportedTypes.add(IStructuredItemContentProvider.class);
    supportedTypes.add(ITreeItemContentProvider.class);
    supportedTypes.add(IItemLabelProvider.class);
    supportedTypes.add(IItemPropertySource.class);
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.Diagrama} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DiagramaItemProvider diagramaItemProvider;

  /**
   * This creates an adapter for a {@link opencms.Diagrama}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createDiagramaAdapter()
  {
    if (diagramaItemProvider == null)
    {
      diagramaItemProvider = new DiagramaItemProvider(this);
    }

    return diagramaItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.Componente} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ComponenteItemProvider componenteItemProvider;

  /**
   * This creates an adapter for a {@link opencms.Componente}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createComponenteAdapter()
  {
    if (componenteItemProvider == null)
    {
      componenteItemProvider = new ComponenteItemProvider(this);
    }

    return componenteItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.Url} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected UrlItemProvider urlItemProvider;

  /**
   * This creates an adapter for a {@link opencms.Url}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createUrlAdapter()
  {
    if (urlItemProvider == null)
    {
      urlItemProvider = new UrlItemProvider(this);
    }

    return urlItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.SelectorArchivos} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SelectorArchivosItemProvider selectorArchivosItemProvider;

  /**
   * This creates an adapter for a {@link opencms.SelectorArchivos}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSelectorArchivosAdapter()
  {
    if (selectorArchivosItemProvider == null)
    {
      selectorArchivosItemProvider = new SelectorArchivosItemProvider(this);
    }

    return selectorArchivosItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.Tag} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TagItemProvider tagItemProvider;

  /**
   * This creates an adapter for a {@link opencms.Tag}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createTagAdapter()
  {
    if (tagItemProvider == null)
    {
      tagItemProvider = new TagItemProvider(this);
    }

    return tagItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.IdentificadorInterno} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IdentificadorInternoItemProvider identificadorInternoItemProvider;

  /**
   * This creates an adapter for a {@link opencms.IdentificadorInterno}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createIdentificadorInternoAdapter()
  {
    if (identificadorInternoItemProvider == null)
    {
      identificadorInternoItemProvider = new IdentificadorInternoItemProvider(this);
    }

    return identificadorInternoItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.Fecha} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FechaItemProvider fechaItemProvider;

  /**
   * This creates an adapter for a {@link opencms.Fecha}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createFechaAdapter()
  {
    if (fechaItemProvider == null)
    {
      fechaItemProvider = new FechaItemProvider(this);
    }

    return fechaItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.Entradilla} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EntradillaItemProvider entradillaItemProvider;

  /**
   * This creates an adapter for a {@link opencms.Entradilla}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createEntradillaAdapter()
  {
    if (entradillaItemProvider == null)
    {
      entradillaItemProvider = new EntradillaItemProvider(this);
    }

    return entradillaItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.BotonSeleccion} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BotonSeleccionItemProvider botonSeleccionItemProvider;

  /**
   * This creates an adapter for a {@link opencms.BotonSeleccion}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createBotonSeleccionAdapter()
  {
    if (botonSeleccionItemProvider == null)
    {
      botonSeleccionItemProvider = new BotonSeleccionItemProvider(this);
    }

    return botonSeleccionItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.Enlace} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EnlaceItemProvider enlaceItemProvider;

  /**
   * This creates an adapter for a {@link opencms.Enlace}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createEnlaceAdapter()
  {
    if (enlaceItemProvider == null)
    {
      enlaceItemProvider = new EnlaceItemProvider(this);
    }

    return enlaceItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.Video} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VideoItemProvider videoItemProvider;

  /**
   * This creates an adapter for a {@link opencms.Video}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createVideoAdapter()
  {
    if (videoItemProvider == null)
    {
      videoItemProvider = new VideoItemProvider(this);
    }

    return videoItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.Texto} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TextoItemProvider textoItemProvider;

  /**
   * This creates an adapter for a {@link opencms.Texto}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createTextoAdapter()
  {
    if (textoItemProvider == null)
    {
      textoItemProvider = new TextoItemProvider(this);
    }

    return textoItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.Boton} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BotonItemProvider botonItemProvider;

  /**
   * This creates an adapter for a {@link opencms.Boton}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createBotonAdapter()
  {
    if (botonItemProvider == null)
    {
      botonItemProvider = new BotonItemProvider(this);
    }

    return botonItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.Titulo} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TituloItemProvider tituloItemProvider;

  /**
   * This creates an adapter for a {@link opencms.Titulo}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createTituloAdapter()
  {
    if (tituloItemProvider == null)
    {
      tituloItemProvider = new TituloItemProvider(this);
    }

    return tituloItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.Etiqueta} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EtiquetaItemProvider etiquetaItemProvider;

  /**
   * This creates an adapter for a {@link opencms.Etiqueta}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createEtiquetaAdapter()
  {
    if (etiquetaItemProvider == null)
    {
      etiquetaItemProvider = new EtiquetaItemProvider(this);
    }

    return etiquetaItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.Audio} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AudioItemProvider audioItemProvider;

  /**
   * This creates an adapter for a {@link opencms.Audio}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createAudioAdapter()
  {
    if (audioItemProvider == null)
    {
      audioItemProvider = new AudioItemProvider(this);
    }

    return audioItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.Subtitulo} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SubtituloItemProvider subtituloItemProvider;

  /**
   * This creates an adapter for a {@link opencms.Subtitulo}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSubtituloAdapter()
  {
    if (subtituloItemProvider == null)
    {
      subtituloItemProvider = new SubtituloItemProvider(this);
    }

    return subtituloItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.EntradaTexto} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EntradaTextoItemProvider entradaTextoItemProvider;

  /**
   * This creates an adapter for a {@link opencms.EntradaTexto}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createEntradaTextoAdapter()
  {
    if (entradaTextoItemProvider == null)
    {
      entradaTextoItemProvider = new EntradaTextoItemProvider(this);
    }

    return entradaTextoItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.Imagen} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ImagenItemProvider imagenItemProvider;

  /**
   * This creates an adapter for a {@link opencms.Imagen}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createImagenAdapter()
  {
    if (imagenItemProvider == null)
    {
      imagenItemProvider = new ImagenItemProvider(this);
    }

    return imagenItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.Baner} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BanerItemProvider banerItemProvider;

  /**
   * This creates an adapter for a {@link opencms.Baner}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createBanerAdapter()
  {
    if (banerItemProvider == null)
    {
      banerItemProvider = new BanerItemProvider(this);
    }

    return banerItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.IconoRedSocial} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IconoRedSocialItemProvider iconoRedSocialItemProvider;

  /**
   * This creates an adapter for a {@link opencms.IconoRedSocial}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createIconoRedSocialAdapter()
  {
    if (iconoRedSocialItemProvider == null)
    {
      iconoRedSocialItemProvider = new IconoRedSocialItemProvider(this);
    }

    return iconoRedSocialItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.MenuDesplegable} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MenuDesplegableItemProvider menuDesplegableItemProvider;

  /**
   * This creates an adapter for a {@link opencms.MenuDesplegable}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createMenuDesplegableAdapter()
  {
    if (menuDesplegableItemProvider == null)
    {
      menuDesplegableItemProvider = new MenuDesplegableItemProvider(this);
    }

    return menuDesplegableItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.BarraDesplegable} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BarraDesplegableItemProvider barraDesplegableItemProvider;

  /**
   * This creates an adapter for a {@link opencms.BarraDesplegable}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createBarraDesplegableAdapter()
  {
    if (barraDesplegableItemProvider == null)
    {
      barraDesplegableItemProvider = new BarraDesplegableItemProvider(this);
    }

    return barraDesplegableItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link opencms.Slider} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SliderItemProvider sliderItemProvider;

  /**
   * This creates an adapter for a {@link opencms.Slider}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSliderAdapter()
  {
    if (sliderItemProvider == null)
    {
      sliderItemProvider = new SliderItemProvider(this);
    }

    return sliderItemProvider;
  }

  /**
   * This returns the root adapter factory that contains this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComposeableAdapterFactory getRootAdapterFactory()
  {
    return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
  }

  /**
   * This sets the composed adapter factory that contains this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory)
  {
    this.parentAdapterFactory = parentAdapterFactory;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object type)
  {
    return supportedTypes.contains(type) || super.isFactoryForType(type);
  }

  /**
   * This implementation substitutes the factory itself as the key for the adapter.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter adapt(Notifier notifier, Object type)
  {
    return super.adapt(notifier, this);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object adapt(Object object, Object type)
  {
    if (isFactoryForType(type))
    {
      Object adapter = super.adapt(object, type);
      if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter)))
      {
        return adapter;
      }
    }

    return null;
  }

  /**
   * This adds a listener.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void addListener(INotifyChangedListener notifyChangedListener)
  {
    changeNotifier.addListener(notifyChangedListener);
  }

  /**
   * This removes a listener.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void removeListener(INotifyChangedListener notifyChangedListener)
  {
    changeNotifier.removeListener(notifyChangedListener);
  }

  /**
   * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void fireNotifyChanged(Notification notification)
  {
    changeNotifier.fireNotifyChanged(notification);

    if (parentAdapterFactory != null)
    {
      parentAdapterFactory.fireNotifyChanged(notification);
    }
  }

  /**
   * This disposes all of the item providers created by this factory. 
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void dispose()
  {
    if (diagramaItemProvider != null) diagramaItemProvider.dispose();
    if (componenteItemProvider != null) componenteItemProvider.dispose();
    if (urlItemProvider != null) urlItemProvider.dispose();
    if (selectorArchivosItemProvider != null) selectorArchivosItemProvider.dispose();
    if (tagItemProvider != null) tagItemProvider.dispose();
    if (identificadorInternoItemProvider != null) identificadorInternoItemProvider.dispose();
    if (fechaItemProvider != null) fechaItemProvider.dispose();
    if (entradillaItemProvider != null) entradillaItemProvider.dispose();
    if (botonSeleccionItemProvider != null) botonSeleccionItemProvider.dispose();
    if (enlaceItemProvider != null) enlaceItemProvider.dispose();
    if (videoItemProvider != null) videoItemProvider.dispose();
    if (textoItemProvider != null) textoItemProvider.dispose();
    if (botonItemProvider != null) botonItemProvider.dispose();
    if (tituloItemProvider != null) tituloItemProvider.dispose();
    if (etiquetaItemProvider != null) etiquetaItemProvider.dispose();
    if (audioItemProvider != null) audioItemProvider.dispose();
    if (subtituloItemProvider != null) subtituloItemProvider.dispose();
    if (entradaTextoItemProvider != null) entradaTextoItemProvider.dispose();
    if (imagenItemProvider != null) imagenItemProvider.dispose();
    if (banerItemProvider != null) banerItemProvider.dispose();
    if (iconoRedSocialItemProvider != null) iconoRedSocialItemProvider.dispose();
    if (menuDesplegableItemProvider != null) menuDesplegableItemProvider.dispose();
    if (barraDesplegableItemProvider != null) barraDesplegableItemProvider.dispose();
    if (sliderItemProvider != null) sliderItemProvider.dispose();
  }

}
